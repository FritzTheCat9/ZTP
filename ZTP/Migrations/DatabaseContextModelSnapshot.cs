// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZTP;

namespace ZTP.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZTP.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AdminRights")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            AdminRights = true,
                            FirstName = "Jan",
                            LastName = "Kowalski",
                            Login = "1",
                            Password = "1"
                        },
                        new
                        {
                            CustomerID = 2,
                            AdminRights = false,
                            FirstName = "Robert",
                            LastName = "Nowak",
                            Login = "nowak",
                            Password = "nowak"
                        },
                        new
                        {
                            CustomerID = 3,
                            AdminRights = false,
                            FirstName = "Krzysztof",
                            LastName = "Piekarski",
                            Login = "piekarski",
                            Password = "piekarski"
                        });
                });

            modelBuilder.Entity("ZTP.Models.CustomerProduct", b =>
                {
                    b.Property<int>("CustomerProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("CustomerProductID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ProductID");

                    b.ToTable("CustomerProducts");

                    b.HasData(
                        new
                        {
                            CustomerProductID = 1,
                            CustomerID = 1,
                            ProductID = 1
                        },
                        new
                        {
                            CustomerProductID = 2,
                            CustomerID = 1,
                            ProductID = 2
                        },
                        new
                        {
                            CustomerProductID = 3,
                            CustomerID = 1,
                            ProductID = 3
                        },
                        new
                        {
                            CustomerProductID = 4,
                            CustomerID = 2,
                            ProductID = 1
                        },
                        new
                        {
                            CustomerProductID = 5,
                            CustomerID = 2,
                            ProductID = 2
                        },
                        new
                        {
                            CustomerProductID = 6,
                            CustomerID = 3,
                            ProductID = 1
                        },
                        new
                        {
                            CustomerProductID = 7,
                            CustomerID = 3,
                            ProductID = 3
                        });
                });

            modelBuilder.Entity("ZTP.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethodID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShippingMethodID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("PaymentMethodID");

                    b.HasIndex("ShippingMethodID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            CustomerID = 1,
                            OrderStatus = 0,
                            PaymentMethodID = 3,
                            Price = 4300m,
                            ShippingMethodID = 1
                        },
                        new
                        {
                            OrderID = 2,
                            CustomerID = 2,
                            OrderStatus = 1,
                            PaymentMethodID = 2,
                            Price = 5000m,
                            ShippingMethodID = 2
                        },
                        new
                        {
                            OrderID = 3,
                            CustomerID = 3,
                            OrderStatus = 1,
                            PaymentMethodID = 1,
                            Price = 2999m,
                            ShippingMethodID = 2
                        },
                        new
                        {
                            OrderID = 4,
                            CustomerID = 2,
                            OrderStatus = 2,
                            PaymentMethodID = 1,
                            Price = 2999m,
                            ShippingMethodID = 3
                        },
                        new
                        {
                            OrderID = 5,
                            CustomerID = 3,
                            OrderStatus = 2,
                            PaymentMethodID = 3,
                            Price = 9300m,
                            ShippingMethodID = 3
                        });
                });

            modelBuilder.Entity("ZTP.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentMethodID");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            PaymentMethodID = 1,
                            Name = "Szybki przelew"
                        },
                        new
                        {
                            PaymentMethodID = 2,
                            Name = "Przelew"
                        },
                        new
                        {
                            PaymentMethodID = 3,
                            Name = "Karta"
                        });
                });

            modelBuilder.Entity("ZTP.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Promotion")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("VAT")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Name = "Laptop LENOVO",
                            Price = 4300m,
                            Promotion = false,
                            Quantity = 20,
                            VAT = 23
                        },
                        new
                        {
                            ProductID = 2,
                            Name = "Laptop HUAWEI",
                            Price = 5000m,
                            Promotion = false,
                            Quantity = 59,
                            VAT = 23
                        },
                        new
                        {
                            ProductID = 3,
                            Name = "Smartfon HUAWEI P30",
                            Price = 2999m,
                            Promotion = true,
                            Quantity = 67,
                            VAT = 23
                        });
                });

            modelBuilder.Entity("ZTP.Models.ProductOrder", b =>
                {
                    b.Property<int>("ProductOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("ProductOrderID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductOrders");

                    b.HasData(
                        new
                        {
                            ProductOrderID = 1,
                            OrderID = 1,
                            ProductID = 1
                        },
                        new
                        {
                            ProductOrderID = 2,
                            OrderID = 2,
                            ProductID = 2
                        },
                        new
                        {
                            ProductOrderID = 3,
                            OrderID = 3,
                            ProductID = 3
                        },
                        new
                        {
                            ProductOrderID = 4,
                            OrderID = 4,
                            ProductID = 3
                        },
                        new
                        {
                            ProductOrderID = 5,
                            OrderID = 5,
                            ProductID = 1
                        },
                        new
                        {
                            ProductOrderID = 6,
                            OrderID = 5,
                            ProductID = 2
                        });
                });

            modelBuilder.Entity("ZTP.Models.ShippingMethod", b =>
                {
                    b.Property<int>("ShippingMethodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShippingMethodID");

                    b.ToTable("ShippingMethods");

                    b.HasData(
                        new
                        {
                            ShippingMethodID = 1,
                            Name = "Kurier UPS"
                        },
                        new
                        {
                            ShippingMethodID = 2,
                            Name = "Kurier DPD"
                        },
                        new
                        {
                            ShippingMethodID = 3,
                            Name = "Poczta Polska"
                        });
                });

            modelBuilder.Entity("ZTP.Models.CustomerProduct", b =>
                {
                    b.HasOne("ZTP.Models.Customer", "Customer")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZTP.Models.Product", "Product")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZTP.Models.Order", b =>
                {
                    b.HasOne("ZTP.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZTP.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentMethodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZTP.Models.ShippingMethod", "ShippingMethod")
                        .WithMany("Orders")
                        .HasForeignKey("ShippingMethodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZTP.Models.ProductOrder", b =>
                {
                    b.HasOne("ZTP.Models.Order", "Order")
                        .WithMany("ProductOrders")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZTP.Models.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
